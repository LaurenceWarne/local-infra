AWSTemplateFormatVersion: "2010-09-09"
#AWS_REGION=us-east-1 aws cloudformation deploy --stack-name local-infra --template-file template.yaml --capabilities CAPABILITY_IAM
#AWS_REGION=us-east-1 aws cloudformation delete-stack --stack-name local-infra
Description: My template
Parameters:
  DefaultVpcId:
    Type: String
    Default: vpc-0f90c5a636f597cdf
Resources:
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      # Has to be within the vpc CIDR
      CidrBlock: 172.31.48.0/20
      MapPublicIpOnLaunch: true
      VpcId:
        Ref: DefaultVpcId
  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 172.31.64.0/20
      VpcId:
        Ref: DefaultVpcId

  SSHSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SSH access
      VpcId:
         Ref: DefaultVpcId
      # When you specify a VPC security group, Amazon EC2 creates a default egress rule that allows egress traffic on all ports and IP protocols to any location.
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
  HTTPSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: HTTP access
      VpcId:
         Ref: DefaultVpcId
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: "-1"
          CidrIp: 0.0.0.0/0

  EcsTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ecs-tasks.amazonaws.com]
            Action: ['sts:AssumeRole']
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
                
  BastionEC2: 
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-04505e74c0741db8d
      InstanceType: t2.micro
      KeyName: rsa
      SubnetId: !Ref PublicSubnet
      SecurityGroupIds:
        - !Ref SSHSecurityGroup

  TestEC2: 
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-04505e74c0741db8d
      InstanceType: t2.micro
      SubnetId: !Ref PrivateSubnet
      SecurityGroupIds:
        - !Ref HTTPSecurityGroup
        
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: MiscCluster
  ECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      # Tasks and services that use the awsvpc network mode require the Amazon ECS service-linked role to provide Amazon ECS with the permissions to make calls to other AWS services on your behalf
      ExecutionRoleArn: !GetAtt EcsTaskExecutionRole.Arn
      ContainerDefinitions:
        - Name: my-container
          Image: nginx
      RequiresCompatibilities:
        - EC2
  ECSService: 
    Type: AWS::ECS::Service
    Properties: 
      DesiredCount: 1
      Cluster: !Ref ECSCluster
      LaunchType: FARGATE
      # Required since NetworkMode is set to awsvpc in the task def
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref HTTPSecurityGroup
          Subnets:
            - !Ref PublicSubnet
      TaskDefinition: !Ref ECSTaskDefinition
